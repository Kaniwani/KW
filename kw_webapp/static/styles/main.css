@charset "UTF-8";
/*
 * Toolkit styles
 */
.pure-form input[type=text], .pure-form input[type=password], .pure-form input[type=email], .pure-form input[type=url], .pure-form input[type=date], .pure-form input[type=month], .pure-form input[type=time], .pure-form input[type=datetime], .pure-form input[type=datetime-local], .pure-form input[type=week], .pure-form input[type=number], .pure-form input[type=search], .pure-form input[type=tel], .pure-form input[type=color] {
  padding: .5em .6em;
  display: inline-block;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
  border-radius: 4px;
  vertical-align: middle;
  box-sizing: border-box; }

.pure-form select,
.pure-form textarea {
  padding: .5em .6em;
  display: inline-block;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
  border-radius: 4px;
  vertical-align: middle;
  box-sizing: border-box; }

.pure-form input:not([type]) {
  padding: .5em .6em;
  display: inline-block;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
  border-radius: 4px;
  box-sizing: border-box; }

.pure-form input[type=color] {
  padding: .2em .5em; }

.pure-form input[type=text]:focus, .pure-form input[type=password]:focus, .pure-form input[type=email]:focus, .pure-form input[type=url]:focus, .pure-form input[type=date]:focus, .pure-form input[type=month]:focus, .pure-form input[type=time]:focus, .pure-form input[type=datetime]:focus, .pure-form input[type=datetime-local]:focus, .pure-form input[type=week]:focus, .pure-form input[type=number]:focus, .pure-form input[type=search]:focus, .pure-form input[type=tel]:focus, .pure-form input[type=color]:focus {
  outline: 0;
  border-color: #129FEA; }

.pure-form select:focus,
.pure-form textarea:focus {
  outline: 0;
  border-color: #129FEA; }

.pure-form input:not([type]):focus {
  outline: 0;
  border-color: #129FEA; }

.pure-form input[type=file]:focus, .pure-form input[type=radio]:focus, .pure-form input[type=checkbox]:focus {
  outline: thin solid #129FEA;
  outline: 1px auto #129FEA; }

.pure-form .pure-checkbox,
.pure-form .pure-radio {
  margin: .5em 0;
  display: block; }

.pure-form input[type=text][disabled], .pure-form input[type=password][disabled], .pure-form input[type=email][disabled], .pure-form input[type=url][disabled], .pure-form input[type=date][disabled], .pure-form input[type=month][disabled], .pure-form input[type=time][disabled], .pure-form input[type=datetime][disabled], .pure-form input[type=datetime-local][disabled], .pure-form input[type=week][disabled], .pure-form input[type=number][disabled], .pure-form input[type=search][disabled], .pure-form input[type=tel][disabled], .pure-form input[type=color][disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3; }

.pure-form select[disabled],
.pure-form textarea[disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3; }

.pure-form input:not([type])[disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3; }

.pure-form input[readonly] {
  background-color: #eee;
  color: #777;
  border-color: #ccc; }

.pure-form select[readonly],
.pure-form textarea[readonly] {
  background-color: #eee;
  color: #777;
  border-color: #ccc; }

.pure-form input:focus:invalid,
.pure-form textarea:focus:invalid,
.pure-form select:focus:invalid {
  color: #b94a48;
  border-color: #e9322d; }

.pure-form input[type=file]:focus:invalid:focus, .pure-form input[type=radio]:focus:invalid:focus, .pure-form input[type=checkbox]:focus:invalid:focus {
  outline-color: #e9322d; }

.pure-form select {
  height: 2.25em;
  border: 1px solid #ccc;
  background-color: #fff; }
  .pure-form select[multiple] {
    height: auto; }

.pure-form label {
  margin: .5em 0 .2em; }

.pure-form fieldset {
  margin: 0;
  padding: .35em 0 .75em;
  border: 0; }

.pure-form legend {
  display: block;
  width: 100%;
  padding: .3em 0;
  margin-bottom: .3em;
  color: #333;
  border-bottom: 1px solid #e5e5e5; }

.pure-form-stacked input[type=text], .pure-form-stacked input[type=password], .pure-form-stacked input[type=email], .pure-form-stacked input[type=url], .pure-form-stacked input[type=date], .pure-form-stacked input[type=month], .pure-form-stacked input[type=time], .pure-form-stacked input[type=datetime], .pure-form-stacked input[type=datetime-local], .pure-form-stacked input[type=week], .pure-form-stacked input[type=number], .pure-form-stacked input[type=search], .pure-form-stacked input[type=tel], .pure-form-stacked input[type=color], .pure-form-stacked input[type=file] {
  display: block;
  margin: .25em 0; }

.pure-form-stacked select,
.pure-form-stacked label,
.pure-form-stacked textarea,
.pure-form-stacked input:not([type]) {
  display: block;
  margin: .5em 0; }

.pure-form-aligned input,
.pure-form-aligned textarea,
.pure-form-aligned select,
.pure-form-aligned .pure-help-inline {
  display: inline-block;
  vertical-align: middle; }

.pure-form-message-inline {
  display: inline-block;
  vertical-align: middle; }

.pure-form-aligned textarea {
  vertical-align: top; }

.pure-form-aligned .pure-control-group {
  margin-bottom: .5em; }
  .pure-form-aligned .pure-control-group label {
    text-align: right;
    display: inline-block;
    vertical-align: middle;
    width: 10em;
    margin: 0 1em 0 0; }

.pure-form-aligned .pure-controls {
  margin: 1.5em 0 0 11em; }

.pure-form input.pure-input-rounded,
.pure-form .pure-input-rounded {
  border-radius: 2em;
  padding: .5em 1em; }

.pure-form .pure-group fieldset {
  margin-bottom: 10px; }

.pure-form .pure-group input,
.pure-form .pure-group textarea {
  display: block;
  padding: 10px;
  margin: 0 0 -1px;
  border-radius: 0;
  position: relative;
  top: -1px; }

.pure-form .pure-group input:focus,
.pure-form .pure-group textarea:focus {
  z-index: 3; }

.pure-form .pure-group input:first-child,
.pure-form .pure-group textarea:first-child {
  top: 1px;
  border-radius: 4px 4px 0 0;
  margin: 0; }

.pure-form .pure-group input:first-child:last-child,
.pure-form .pure-group textarea:first-child:last-child {
  top: 1px;
  border-radius: 4px;
  margin: 0; }

.pure-form .pure-group input:last-child,
.pure-form .pure-group textarea:last-child {
  top: -2px;
  border-radius: 0 0 4px 4px;
  margin: 0; }

.pure-form .pure-group button {
  margin: .35em 0; }

.pure-form .pure-input-1 {
  width: 100%; }

.pure-form .pure-input-2-3 {
  width: 66%; }

.pure-form .pure-input-1-2 {
  width: 50%; }

.pure-form .pure-input-1-3 {
  width: 33%; }

.pure-form .pure-input-1-4 {
  width: 25%; }

.pure-form .pure-help-inline {
  display: inline-block;
  padding-left: .3em;
  color: #666;
  vertical-align: middle;
  font-size: .875em; }

.pure-form-message-inline {
  display: inline-block;
  padding-left: .3em;
  color: #666;
  vertical-align: middle;
  font-size: .875em; }

.pure-form-message {
  display: block;
  color: #666;
  font-size: .875em; }

.pure-button {
  display: inline-block;
  zoom: 1;
  line-height: normal;
  white-space: nowrap;
  vertical-align: middle;
  text-align: center;
  cursor: pointer; }

.pure-button::-moz-focus-inner {
  padding: 0;
  border: 0; }

.pure-button {
  font-family: inherit;
  font-size: 100%;
  padding: .5em 1em;
  color: #444;
  color: rgba(0, 0, 0, 0.8);
  border: 1px solid #999;
  border: 0 transparent;
  background-color: #E6E6E6;
  text-decoration: none;
  border-radius: 2px; }

.pure-button:focus {
  outline: 0; }

.pure-button-active,
.pure-button:active {
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15) inset, 0 0 6px rgba(0, 0, 0, 0.2) inset;
  border-color: #000\9; }

.pure-button[disabled],
.pure-button-disabled,
.pure-button-disabled:hover,
.pure-button-disabled:focus,
.pure-button-disabled:active {
  border: 0;
  background-image: none;
  opacity: .4;
  cursor: not-allowed;
  box-shadow: none; }

.pure-button-hidden {
  display: none; }

.pure-button::-moz-focus-inner {
  padding: 0;
  border: 0; }

.pure-button-primary,
.pure-button-selected,
a.pure-button-primary,
a.pure-button-selected {
  background-color: #0078e7;
  color: #fff; }

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/* Site Breakpoints - see _include-media.scss for usage */
/* Custom Component Breakpoints */
/* Units */
/* Greyscale */
/* KaniWani colors */
/* Shadows */
@keyframes wobble {
  0% {
    transform: rotate(0deg); }
  25% {
    transform: rotate(-8deg); }
  75% {
    transform: rotate(8deg); }
  100% {
    transform: rotate(0deg); } }

@keyframes fadeOutUp {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translate3d(0, -200%, 0); } }

/* https://github.com/IonicaBizau/gridly/ */
.row {
  display: flex; }

.col {
  flex: 1; }

@media (max-width: 500px) {
  .row {
    flex-direction: column; }
  .col {
    flex: 0 0 100%; } }

.col-tenth {
  flex: 0 0 10%; }

.col-fifth {
  flex: 0 0 20%; }

.col-quarter {
  flex: 0 0 25%; }

.col-third {
  flex: 0 0 33.3333334%; }

.col-half {
  flex: 0 0 50%; }

.col-two-thirds {
  flex: 0 0 75%; }

.col-three-quarters {
  flex: 0 0 75%; }

.accordion-list, .floating-icons, .lattice-list, .level-list, .login-form .alert > ul, .nav-list, .review-header > .inner > .statslist, .user-details .wkinfo .list, .user-details .userinfo > .list {
  margin: 0;
  padding: 0;
  list-style: none; }

._visuallyhidden {
  position: absolute;
  height: 1px !important;
  width: 1px !important;
  margin: -1px !important;
  clip: rect(0 0 0 0);
  outline: 0;
  overflow: hidden;
  border: 0;
  padding: 0; }

.-hidden {
  display: none !important; }

._strikeout {
  text-decoration: line-through; }

._styleguidewrap {
  position: relative;
  height: 300px; }

@font-face {
  font-family: 'fontello';
  src: url("../fonts/icons/fontello.eot?91272950");
  src: url("../fonts/icons/fontello.eot?91272950#iefix") format("embedded-opentype"), url("../fonts/icons/fontello.woff?91272950") format("woff"), url("../fonts/icons/fontello.ttf?91272950") format("truetype"), url("../fonts/icons/fontello.svg?91272950#fontello") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="i-"]:before,
[class*=" i-"]:before, .accordion-list > .item > .label:after {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.i-lock:before {
  content: '\e800'; }

/* '' */
.i-unlock:before {
  content: '\e802'; }

/* '' */
.i-unlocked:before {
  content: '\e801'; }

/* '' */
.i-enlightened:before {
  content: '\e803'; }

/* '' */
.i-burned:before {
  content: '\e804'; }

/* '' */
.i-apprentice:before {
  content: '\e805'; }

/* '' */
.i-guru:before {
  content: '\e806'; }

/* '' */
.i-master:before {
  content: '\e807'; }

/* '' */
.i-logout:before {
  content: '\e808'; }

/* '' */
.i-home:before {
  content: '\e809'; }

/* '' */
.i-uparrow:before {
  content: '\e80d'; }

/* '' */
.i-downarrow:before {
  content: '\e80a'; }

/* '' */
.i-leftarrow:before {
  content: '\e80b'; }

/* '' */
.i-rightarrow:before {
  content: '\e80c'; }

/* '' */
.i-refresh:before {
  content: '\e80e'; }

/* '' */
.i-attention:before {
  content: '\e80f'; }

/* '' */
.i-thumbsup:before {
  content: '\e810'; }

/* '' */
.i-thumbsdown:before {
  content: '\e811'; }

/* '' */
.i-link:before {
  content: '\e812'; }

/* '' */
.i-inbox:before {
  content: '\e813'; }

/* '' */
.i-twitter:before {
  content: '\e814'; }

/* '' */
.i-ok:before {
  content: '\e815'; }

/* '' */
.i-cancel:before {
  content: '\e816'; }

/* '' */
.i-plus:before {
  content: '\e817'; }

/* '' */
.i-minus:before {
  content: '\e818'; }

/* '' */
.-loading {
  border-top: 2px solid rgba(41, 41, 41, 0.2);
  border-right: 2px solid rgba(41, 41, 41, 0.2);
  border-bottom: 2px solid rgba(41, 41, 41, 0.2);
  border-left: 2px solid whitesmoke;
  transform: translateZ(0);
  animation: loadspin 1.2s infinite linear; }

.-loading,
.-loading:after {
  border-radius: 50%;
  width: .95em;
  height: .95em; }

@keyframes loadspin {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

[lang="ja"] {
  font-family: "Hiragino Kaku Gothic Pro", "Takao Pゴシック", "Meiryo", "Yu Gothic", "ヒラギノ角ゴ Pro W3", "メイリオ", "Osaka", "MS PGothic", "ＭＳ Ｐゴシック", sans-serif; }

body {
  font-family: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 16px;
  font-size: calc(14px + 4 * ( (100vw - 400px) / 1000));
  line-height: 1.4;
  color: #4d4d4d; }

@media screen and (min-width: 1400px){
  body{
    font-size: 18px; } }

@media screen and (max-width: 400px){
  body{
    font-size: 14px; } }

*:focus {
  outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Ubuntu", Helvetica, Arial, sans-serif;
  color: #616161;
  font-weight: normal;
  margin: 0;
  margin-bottom: 10px;
  line-height: 1.6; }
  h1:first-child,
  h2:first-child,
  h3:first-child,
  h4:first-child,
  h5:first-child,
  h6:first-child {
    margin-top: .5em; }

.-mega {
  font-size: calc(21px + 49 * ( (100vw - 600px) / 1400));
  margin: 0 !important; }

@media screen and (min-width: 2000px){
  .-mega{
    font-size: 70px; } }

@media screen and (max-width: 600px){
  .-mega{
    font-size: 21px; } }

h1 {
  font-family: "Ubuntu", Helvetica, Arial, sans-serif;
  font-size: 30px;
  font-size: calc(21px + 15 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h1{
    font-size: 36px; } }

@media screen and (max-width: 600px){
  h1{
    font-size: 21px; } }

h2 {
  font-size: 25px;
  font-size: calc(20px + 10 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h2{
    font-size: 30px; } }

@media screen and (max-width: 600px){
  h2{
    font-size: 20px; } }

h3 {
  font-size: calc(18px + 7 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h3{
    font-size: 25px; } }

@media screen and (max-width: 600px){
  h3{
    font-size: 18px; } }

h4 {
  font-size: calc(17px + 7 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h4{
    font-size: 24px; } }

@media screen and (max-width: 600px){
  h4{
    font-size: 17px; } }

h5 {
  font-size: calc(16px + 7 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h5{
    font-size: 23px; } }

@media screen and (max-width: 600px){
  h5{
    font-size: 16px; } }

h6 {
  font-size: calc(16px + 5 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  h6{
    font-size: 21px; } }

@media screen and (max-width: 600px){
  h6{
    font-size: 16px; } }

b,
strong {
  font-family: "Ubuntu", Helvetica, Arial, sans-serif; }

a {
  text-decoration: none;
  transition: all .3s ease-out;
  color: #616161; }

p {
  max-width: 800px;
  margin: 0;
  margin-bottom: .7em; }
  p:last-child {
    margin-bottom: 0; }
  p > a {
    color: #008bd1; }
    p > a:hover {
      color: #2e50dc; }

mark {
  background: rgba(0, 139, 209, 0.4);
  padding: 0 .2em;
  border-radius: 1px; }

html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

html {
  height: 100vh; }

body {
  background: #fafafa;
  height: 100%; }

[class*="-section"]:not(.-fullwidth) {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 25px; }

[class*="-section"] > .inner {
  padding-left: 15px;
  padding-right: 15px; }

[contenteditable="true"] {
  overflow: hidden !important; }
  [contenteditable="true"] br {
    display: none !important; }
  [contenteditable="true"] * {
    display: inline !important; }

.button {
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  outline: 0;
  padding: .5em 1.5em;
  border: 0;
  border-radius: 3px;
  transition: all .3s ease-out; }
  .button.-disabled {
    opacity: .5;
    cursor: not-allowed; }
  .button.-submit {
    font-size: 18px;
    background-color: #4c81d6;
    color: whitesmoke; }
    .button.-submit:hover {
      background-color: rgba(76, 129, 214, 0.8); }

form label + label {
  display: block;
  margin-top: 15px; }

form label + button {
  margin-top: 15px; }

.announcements-section {
  text-align: left; }
  @media (min-width: 670px) {
    .announcements-section {
      text-align: center; }
      .announcements-section .accordion-list > .item > .content {
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
        padding-left: 0; } }

.fourohfour {
  position: relative;
  width: 100%;
  height: 100%;
  background: url("../images/404.png") no-repeat 15% center fixed;
  background-size: cover; }
  .fourohfour > .text {
    padding: 0 5% 0 1%;
    float: right;
    text-align: right; }
    .fourohfour > .text > * {
      color: #616161;
      text-shadow: 1px 1px 1px rgba(41, 41, 41, 0.2); }
      .fourohfour > .text > *:first-child {
        color: #ff00c4; }

.levels-section > .inner {
  padding-left: 10px;
  padding-right: 10px; }
  .levels-section > .inner > .section-heading {
    padding-left: 5px;
    padding-right: 5px; }

.login-section {
  position: relative;
  display: block;
  min-height: 100vh;
  width: 100%;
  overflow: auto;
  color: whitesmoke;
  background: #008bd1;
  background: linear-gradient(to bottom, #008bd1 40%, #2e50dc 95%); }
  .login-section.-pending > .container > .login-form,
  .login-section.-pending > .link {
    opacity: 0;
    pointer-events: none; }
  .login-section.-pending > .container > .title {
    animation: fadeOutUp 6s ease-in;
    animation-fill-mode: forwards; }
  .login-section.-pending > .feedback {
    opacity: 1; }
  .login-section > .feedback {
    position: absolute;
    margin: 0;
    top: 50%;
    left: 50%;
    text-align: center;
    transform: translate(-50%, -50%);
    transition: opacity 8s ease-in;
    color: whitesmoke;
    opacity: 0; }
    .login-section > .feedback .icon {
      display: block;
      margin: .25em auto;
      font-size: 1.5em; }
  .login-section > .container {
    max-width: 600px;
    text-align: center;
    z-index: 2;
    margin: 25px auto 15px; }
    @media (min-width: 1024px) {
      .login-section > .container {
        position: absolute;
        margin: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); } }
    .login-section > .container > .title {
      position: relative;
      margin-top: 0;
      line-height: 1.2;
      opacity: .9;
      z-index: 2;
      color: whitesmoke;
      font-size: 40px; }
      @media (min-width: 1024px) {
        .login-section > .container > .title {
          font-size: 60px; } }
    .login-section > .container > .login-form {
      transition: opacity 1s ease; }
  .login-section > .link {
    display: block;
    position: relative;
    padding: 10px;
    font-size: 14px;
    font-weight: 400;
    text-decoration: none;
    color: whitesmoke;
    z-index: 3;
    opacity: .85;
    transition: opacity 1s ease;
    text-align: center; }
    @media (min-width: 1024px) {
      .login-section > .link {
        position: absolute;
        top: 0;
        right: 0;
        padding: 12px 18px;
        font-size: 16px;
        transition: opacity .2s ease-out;
        text-align: right; } }
    .login-section > .link:hover {
      opacity: 1; }
  .login-section > .floating-icons {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0; }

.review-section {
  position: relative; }
  .review-section > .review-header {
    color: whitesmoke;
    overflow: visible;
    max-height: 0; }
    .review-section > .review-header > .inner {
      position: absolute;
      top: 0;
      width: 100%; }
    .review-section > .review-header > .inner > .homelink > .icon {
      color: whitesmoke; }

.settings-section > .inner input[type="text"] {
  min-width: 280px; }
  @media (min-width: 1024px) {
    .settings-section > .inner input[type="text"] {
      min-width: 600px; } }

.settings-section > .inner input[type="submit"] {
  margin-top: 10px;
  background-color: #008bd1; }

.settings-section > .inner input[type="checkbox"] {
  display: inline-block;
  margin: 10px 10px 0 0;
  height: 15px;
  width: 15px; }

.settings-section > .inner .help-block {
  display: block;
  margin-top: 10px;
  font-size: .9em;
  font-style: italic; }

.settings-section > .inner input[type="submit"] {
  background-color: #008bd1;
  color: whitesmoke;
  transition: all .2s ease-out; }
  .settings-section > .inner input[type="submit"]:focus, .settings-section > .inner input[type="submit"]:active {
    background-color: #4c81d6; }
  .settings-section > .inner input[type="submit"]:hover {
    background-color: #2e50dc; }

.site-footer {
  padding-top: 15px;
  background-color: #292929; }
  .site-footer .title {
    color: whitesmoke; }
  .site-footer .site-logo > .text {
    background-color: #ff00c4;
    color: #4d4d4d; }
  .site-footer .site-logo:hover {
    color: #4d4d4d;
    text-decoration: none; }
    .site-footer .site-logo:hover > .text {
      background: #a800f0; }

.site-header {
  background: whitesmoke;
  box-shadow: 0 1px 12px rgba(41, 41, 41, 0.1); }
  .site-header > .inner {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: space-between;
    align-items: center; }
    .site-header > .inner > .site-logo {
      margin: 10px;
      flex-shrink: 0;
      align-self: flex-start; }
      @media (min-width: 590px) {
        .site-header > .inner > .site-logo {
          align-self: center; } }
    .site-header > .inner > .site-nav {
      align-self: flex-start;
      font-size: 14px; }
      @media (min-width: 590px) {
        .site-header > .inner > .site-nav {
          align-self: center; } }
      @media (min-width: 850px) {
        .site-header > .inner > .site-nav {
          font-size: 16px; } }

.site-nav > .expandToggle {
  display: block;
  padding: 22px 10px;
  font-size: 18px;
  text-decoration: none;
  text-align: right; }
  @media (min-width: 590px) {
    .site-nav > .expandToggle {
      display: none; } }

.site-nav > .nav-list {
  max-height: 0;
  overflow: hidden;
  transition: max-height .3s linear; }
  @media (min-width: 590px) {
    .site-nav > .nav-list {
      max-height: initial; } }
  .site-nav > .nav-list.-open {
    display: flex;
    max-height: 260px; }

.accordion-list > .item > .content {
  position: relative;
  padding-left: 15px;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  transition: all .4s ease-out;
  transform: translateZ(0); }

.accordion-list > .item > .toggle:checked ~ .label:after {
  content: '\e818'; }
  @media (min-width: 1024px) {
    .accordion-list > .item > .toggle:checked ~ .label:after {
      transform: translateY(-2px); } }

.accordion-list > .item > .toggle:checked ~ .content {
  max-height: 500px;
  opacity: 1; }

.accordion-list > .item > .label {
  font-family: "Ubuntu", Helvetica, Arial, sans-serif;
  font-weight: 400;
  color: #616161;
  position: relative;
  font-size: 1.2em;
  cursor: pointer; }
  .accordion-list > .item > .label:before {
    position: absolute;
    content: '';
    top: -5px;
    bottom: -5px;
    left: -5px;
    right: -5px; }
  .accordion-list > .item > .label:after {
    font-size: .85em;
    content: '\e817';
    color: #4d4d4d; }

.contact-form {
  margin-top: 30px; }
  .contact-form * {
    margin-bottom: 10px; }
  .contact-form input:not([type="submit"]),
  .contact-form textarea {
    min-width: 280px;
    max-width: calc(90vw - 40px); }
    @media (min-width: 1024px) {
      .contact-form input:not([type="submit"]),
      .contact-form textarea {
        min-width: 600px; } }
  .contact-form input[type="submit"],
  .contact-form button[type="submit"] {
    margin-top: 10px;
    background-color: #008bd1;
    color: white;
    transition: all .3s ease-out; }
    .contact-form input[type="submit"]:active, .contact-form input[type="submit"]:focus, .contact-form input[type="submit"]:hover,
    .contact-form button[type="submit"]:active,
    .contact-form button[type="submit"]:focus,
    .contact-form button[type="submit"]:hover {
      background-color: #2e50dc; }

.floating-icons {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
  z-index: 1; }
  .floating-icons > .icon {
    position: absolute;
    display: block;
    list-style: none;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    backface-visibility: hidden;
    transform: translateX(0) translateY(0) translateZ(0) rotate(0deg); }
    .floating-icons > .icon:nth-child(1) {
      opacity: 0.56;
      width: 113.75px;
      height: 113.75px;
      left: calc(41% - 113.75px);
      bottom: -113.75px;
      animation-name: turtle-float-1;
      animation-duration: 60s;
      animation-delay: 0.5s; }

@keyframes turtle-float-1 {
  33% {
    opacity: 0.32; }
  66% {
    opacity: 0.92; }
  100% {
    opacity: 0.32;
    transform: translateX(9.75vw) translateY(calc(-102vh - 113.75px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(2) {
      opacity: 0.22;
      width: 183.75px;
      height: 183.75px;
      left: calc(4% - 183.75px);
      bottom: -183.75px;
      animation-name: turtle-float-2;
      animation-duration: 102.5s;
      animation-delay: 1s; }

@keyframes turtle-float-2 {
  33% {
    opacity: 0.11; }
  66% {
    opacity: 0.24; }
  100% {
    opacity: 0.59;
    transform: translateX(10.5vw) translateY(calc(-102vh - 183.75px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(3) {
      opacity: 0.37;
      width: 43.75px;
      height: 43.75px;
      left: calc(62% - 43.75px);
      bottom: -43.75px;
      animation-name: turtle-float-3;
      animation-duration: 33s;
      animation-delay: 1.5s; }

@keyframes turtle-float-3 {
  33% {
    opacity: 0.04; }
  66% {
    opacity: 0.4; }
  100% {
    opacity: 0.43;
    transform: translateX(-2.5vw) translateY(calc(-102vh - 43.75px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(4) {
      opacity: 0.56;
      width: 183.75px;
      height: 183.75px;
      left: calc(13% - 183.75px);
      bottom: -183.75px;
      animation-name: turtle-float-4;
      animation-duration: 29s;
      animation-delay: 2s; }

@keyframes turtle-float-4 {
  33% {
    opacity: 0.58; }
  66% {
    opacity: 0.23; }
  100% {
    opacity: 0.2;
    transform: translateX(5.25vw) translateY(calc(-102vh - 183.75px)) rotate(-16.75deg); } }
    .floating-icons > .icon:nth-child(5) {
      opacity: 0.49;
      width: 148.75px;
      height: 148.75px;
      left: calc(85% - 148.75px);
      bottom: -148.75px;
      animation-name: turtle-float-5;
      animation-duration: 42s;
      animation-delay: 2.5s; }

@keyframes turtle-float-5 {
  33% {
    opacity: 0.14; }
  66% {
    opacity: 0.82; }
  100% {
    opacity: 0.16;
    transform: translateX(-17vw) translateY(calc(-102vh - 148.75px)) rotate(-14.75deg); } }
    .floating-icons > .icon:nth-child(6) {
      opacity: 0.51;
      width: 78.75px;
      height: 78.75px;
      left: calc(93% - 78.75px);
      bottom: -78.75px;
      animation-name: turtle-float-6;
      animation-duration: 44s;
      animation-delay: 3s; }

@keyframes turtle-float-6 {
  33% {
    opacity: 0.3; }
  66% {
    opacity: 0.32; }
  100% {
    opacity: 0.53;
    transform: translateX(-9vw) translateY(calc(-102vh - 78.75px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(7) {
      opacity: 0.43;
      width: 183.75px;
      height: 183.75px;
      left: calc(84% - 183.75px);
      bottom: -183.75px;
      animation-name: turtle-float-7;
      animation-duration: 18.5s;
      animation-delay: 3.5s; }

@keyframes turtle-float-7 {
  33% {
    opacity: 0.36; }
  66% {
    opacity: 0.8; }
  100% {
    opacity: 0.58;
    transform: translateX(-31.5vw) translateY(calc(-102vh - 183.75px)) rotate(-31.75deg); } }
    .floating-icons > .icon:nth-child(8) {
      opacity: 0.48;
      width: 43.75px;
      height: 43.75px;
      left: calc(100% - 43.75px);
      bottom: -43.75px;
      animation-name: turtle-float-8;
      animation-duration: 15.5s;
      animation-delay: 4s; }

@keyframes turtle-float-8 {
  33% {
    opacity: 0.38; }
  66% {
    opacity: 0.15; }
  100% {
    opacity: 0.67;
    transform: translateX(-2.5vw) translateY(calc(-102vh - 43.75px)) rotate(-17.75deg); } }
    .floating-icons > .icon:nth-child(8) {
      opacity: 0.36;
      width: 200px;
      height: 200px;
      left: calc(70% - 200px);
      bottom: -200px;
      animation-name: turtle-float-8;
      animation-duration: 90s;
      animation-delay: 11s; }

@keyframes turtle-float-8 {
  33% {
    opacity: 0.33; }
  66% {
    opacity: 0.55; }
  100% {
    opacity: 0.38;
    transform: translateX(-17vw) translateY(calc(-102vh - 200px)) rotate(-77deg); } }
    .floating-icons > .icon:nth-child(9) {
      opacity: 0.36;
      width: 280px;
      height: 280px;
      left: calc(66% - 280px);
      bottom: -280px;
      animation-name: turtle-float-9;
      animation-duration: 106s;
      animation-delay: 16s; }

@keyframes turtle-float-9 {
  33% {
    opacity: 0.13; }
  66% {
    opacity: 0.01; }
  100% {
    opacity: 0.33;
    transform: translateX(-23vw) translateY(calc(-102vh - 280px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(10) {
      opacity: 0.4;
      width: 200px;
      height: 200px;
      left: calc(60% - 200px);
      bottom: -200px;
      animation-name: turtle-float-10;
      animation-duration: 42.5s;
      animation-delay: 16s; }

@keyframes turtle-float-10 {
  33% {
    opacity: 0.62; }
  66% {
    opacity: 0.37; }
  100% {
    opacity: 0.16;
    transform: translateX(-16vw) translateY(calc(-102vh - 200px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(11) {
      opacity: 0.27;
      width: 200px;
      height: 200px;
      left: calc(86% - 200px);
      bottom: -200px;
      animation-name: turtle-float-11;
      animation-duration: 27.5s;
      animation-delay: 1s; }

@keyframes turtle-float-11 {
  33% {
    opacity: 0.18; }
  66% {
    opacity: 0.45; }
  100% {
    opacity: 0;
    transform: translateX(-13vw) translateY(calc(-102vh - 200px)) rotate(+25.75deg); } }
    .floating-icons > .icon:nth-child(12) {
      opacity: 0.33;
      width: 280px;
      height: 280px;
      left: calc(2% - 280px);
      bottom: -280px;
      animation-name: turtle-float-12;
      animation-duration: 74.5s;
      animation-delay: 15s; }

@keyframes turtle-float-12 {
  33% {
    opacity: 0.58; }
  66% {
    opacity: 0.46; }
  100% {
    opacity: 0.4;
    transform: translateX(15vw) translateY(calc(-102vh - 280px)) rotate(-83deg); } }
    @media (max-width: 767px) {
      .floating-icons > .icon:nth-last-child(-n+6) {
        display: none; } }
    .floating-icons > .icon .icon-turtle {
      display: block;
      width: 100%;
      height: 100%;
      background: no-repeat center url("../images/turtle.png");
      background-size: cover; }

.lattice-list > .item {
  display: inline-block;
  margin-bottom: 4px;
  background: #a800f0;
  transition: all .2s ease-out;
  border-radius: 2px; }

.lattice-list > .item > .link {
  display: block;
  padding: .15em .5em;
  color: whitesmoke;
  font-size: 1.8em;
  text-shadow: 1px 1px 4px rgba(116, 18, 165, 0.7); }

.lattice-list.-correct > .item {
  background: #7fd468; }
  .lattice-list.-correct > .item > .link {
    text-shadow: 1px 1px 4px rgba(73, 167, 47, 0.7); }

.lattice-list.-incorrect > .item {
  background: #e2325b; }
  .lattice-list.-incorrect > .item > .link {
    text-shadow: 1px 1px 4px rgba(152, 22, 52, 0.7); }

.level-card {
  position: relative;
  border-radius: 3px;
  display: block; }
  .level-card > .wrap {
    display: block;
    background-color: #aa00ff;
    border-radius: 3px;
    color: #fafafa;
    transition: background-color .6s ease-in-out;
    overflow: hidden;
    font-size: calc(24px + 6 * ( (100vw - 600px) / 700));
    min-height: 4em; }
  @media screen and (min-width: 1300px){
  .level-card > .wrap{
    font-size: 30px; } }
  @media screen and (max-width: 600px){
  .level-card > .wrap{
    font-size: 24px; } }
    .level-card > .wrap > .levelnum {
      text-shadow: 1px 2px 2px rgba(116, 18, 165, 0.7);
      margin: -6px 0 26px;
      position: absolute;
      left: 20px;
      top: 15px; }
    .level-card > .wrap > .icon {
      position: absolute;
      font-size: .9em;
      left: 20px;
      bottom: 15px; }
      .level-card > .wrap > .icon:after {
        position: absolute;
        content: '';
        top: -5px;
        bottom: -5px;
        right: -10px;
        left: -10px; }
      .level-card > .wrap > .icon.i-lock {
        color: #292929; }
      .level-card > .wrap > .icon.i-link {
        left: auto;
        right: 20px;
        transition: color .3s ease-out;
        color: #fafafa;
        font-size: .85em; }
        .level-card > .wrap > .icon.i-link:hover {
          color: #616161;
          cursor: pointer; }
      .level-card > .wrap > .icon.-loading {
        left: 18px;
        bottom: 18px; }
  .level-card.-locked > .wrap {
    background-size: 6px 6px;
    background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.3) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 75%, transparent 75%, transparent);
    transition: background-color .6s ease-in-out;
    background-color: #7412a5; }
  .level-card.-locked .i-lock:hover {
    cursor: not-allowed; }
  .level-card.-unlockable > .wrap:hover .i-unlock {
    cursor: pointer;
    animation: wobble 1.25s infinite cubic-bezier(0.55, 0.45, 0.55, 0.45); }
  .level-card.-unlocked:hover .i-unlocked {
    cursor: pointer; }

.level-list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap; }
  @media (min-width: 1200px) {
    .level-list {
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto; } }
  .level-list > .level-card {
    flex: 1 1 8em;
    z-index: 2;
    margin: 0 5px 10px; }

.login-form {
  position: relative;
  padding: 0;
  z-index: 2; }
  .login-form .alert > ul {
    background: rgba(255, 0, 196, 0.9);
    padding: 10px 15px;
    margin-bottom: 15px;
    border-radius: 5px; }
  .login-form ::-webkit-input-placeholder {
    /* WebKit browsers */
    font-family: 'Source Sans Pro', sans-serif;
    color: whitesmoke; }
  .login-form :-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    font-family: 'Source Sans Pro', sans-serif;
    color: whitesmoke;
    opacity: 1; }
  .login-form ::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    font-family: 'Source Sans Pro', sans-serif;
    color: whitesmoke;
    opacity: 1; }
  .login-form :-ms-input-placeholder {
    /* Internet Explorer 10+ */
    font-family: 'Source Sans Pro', sans-serif;
    color: whitesmoke; }
  .login-form input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0px 1000px white inset !important;
    -webkit-text-fill-color: #2e50dc !important; }
  .login-form .textinput,
  .login-form .emailinput {
    display: block;
    width: 250px;
    padding: 10px 15px;
    margin: 0 auto 10px auto;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    outline: 0;
    border: 1px solid rgba(245, 245, 245, 0.4);
    border-radius: 3px;
    color: whitesmoke;
    background-color: rgba(245, 245, 245, 0.2);
    line-height: 1.3;
    text-align: center;
    font-size: 18px;
    transition: width .3s ease-out; }
    .login-form .textinput:hover,
    .login-form .emailinput:hover {
      background-color: rgba(245, 245, 245, 0.4); }
    .login-form .textinput:focus,
    .login-form .emailinput:focus {
      background-color: whitesmoke;
      width: 280px;
      color: #2e50dc; }
  .login-form .button[type="submit"],
  .login-form .button[type="submit"].-submit {
    background-color: whitesmoke;
    width: 250px;
    color: #4c81d6;
    opacity: .9; }
    .login-form .button[type="submit"]:focus, .login-form .button[type="submit"]:active,
    .login-form .button[type="submit"].-submit:focus,
    .login-form .button[type="submit"].-submit:active {
      width: 270px;
      opacity: 1; }
    .login-form .button[type="submit"]:hover,
    .login-form .button[type="submit"].-submit:hover {
      opacity: 1; }

.nav-link {
  display: flex;
  position: relative;
  justify-content: flex-end;
  align-items: center;
  color: #4d4d4d; }
  .nav-link:hover {
    color: #4d4d4d; }
  .nav-link:after {
    position: absolute;
    content: '';
    top: -8px;
    bottom: -8px;
    right: -18px;
    left: -18px; }
  @media (min-width: 590px) {
    .nav-link {
      justify-content: center; } }
  .nav-link.-disabled {
    cursor: not-allowed !important; }
    .nav-link.-disabled:hover > .text {
      color: #ababab !important; }
      .nav-link.-disabled:hover > .text:after {
        height: 0 !important;
        width: 0 !important; }
  .nav-link > .text {
    position: relative;
    overflow: hidden;
    padding-bottom: 4px; }
    .nav-link > .text .count {
      display: inline-block;
      color: #008bd1; }
      .nav-link > .text .count :not(:empty) {
        margin-left: 3px; }
    .nav-link > .text:not(:only-child) {
      padding-right: 15px; }
    .nav-link > .text:after {
      position: absolute;
      content: '';
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background: #a800f0;
      transition: transform .3s ease-out;
      transform: translate3d(0, 150%, 0); }

.nav-list {
  display: flex;
  max-height: auto;
  flex-wrap: wrap;
  text-align: right;
  justify-content: flex-end; }
  @media (min-width: 590px) {
    .nav-list {
      text-align: center; } }
  @media (min-width: 850px) {
    .nav-list {
      justify-content: center; } }
  .nav-list > .item {
    padding: 8px 16px;
    flex: 1 1 100%; }
    @media (min-width: 590px) {
      .nav-list > .item {
        flex: 0 1 auto; } }
    .nav-list > .item:hover > .nav-link .text:after, .nav-list > .item.-active > .nav-link .text:after {
      transform: translate3d(0, 0, 0); }

.reveal-block:not(:only-child):last-child > .button {
  border-left: none; }

.reveal-block > .button {
  border: 1px solid #ababab;
  width: 100%;
  padding-top: .75em;
  padding-bottom: .75em;
  border-radius: 0;
  background-color: rgba(97, 97, 97, 0.75);
  color: whitesmoke; }
  .reveal-block > .button.-disabled {
    overflow: hidden;
    transition: all .1s ease-in;
    -webkit-filter: blur(1px);
            filter: blur(1px);
    cursor: not-allowed;
    opacity: .85; }
  .reveal-block > .button:not(.-disabled):hover, .reveal-block > .button:not(.-disabled):active {
    cursor: pointer;
    color: whitesmoke;
    background-color: #616161; }

.reveal-block > .reveal {
  transition: all .15s ease;
  overflow-y: hidden;
  max-height: 300px; }
  .reveal-block > .reveal.-hidden {
    transition: all .15s ease;
    max-height: 0; }
  .reveal-block > .reveal > .text {
    background-color: whitesmoke;
    text-align: center;
    padding: 10px 15px;
    max-width: 100%;
    font-size: 2.5em;
    line-height: 1.5; }
    .reveal-block > .reveal > .text.-kanji {
      box-shadow: inset 2px 0 10px -2px rgba(77, 77, 77, 0.15); }
    .reveal-block > .reveal > .text.-kana {
      box-shadow: inset -2px 0 10px -2px rgba(77, 77, 77, 0.15); }
    .reveal-block > .reveal > .text.-synonyms {
      box-shadow: inset 0 0 8px -2px rgba(77, 77, 77, 0.15); }

.review-header > .inner > progress.progressbar {
  position: absolute;
  transition: background-color .4s ease-out;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #a800f0;
  color: whitesmoke;
  border: none;
  opacity: .9; }
  .review-header > .inner > progress.progressbar::-webkit-progress-bar {
    background-color: #fafafa !important; }
  .review-header > .inner > progress.progressbar::-moz-progress-bar {
    background-color: #fafafa !important; }
  .review-header > .inner > progress.progressbar::ms-fill {
    background-color: #fafafa !important; }
  .review-header > .inner > progress.progressbar::-webkit-progress-value {
    background-color: #fafafa !important; }

.review-header > .inner > .homelink,
.review-header > .inner > .statslist {
  margin: .75em; }

.review-header > .inner > .statslist {
  float: right;
  font-size: calc(16px + 4 * ( (100vw - 600px) / 700)); }

@media screen and (min-width: 1300px){
  .review-header > .inner > .statslist{
    font-size: 20px; } }

@media screen and (max-width: 600px){
  .review-header > .inner > .statslist{
    font-size: 16px; } }
  .review-header > .inner > .statslist > .item {
    display: inline-block;
    margin-left: 1em; }
    .review-header > .inner > .statslist > .item span + span {
      margin-left: 6px; }

.review-header > .inner > .homelink {
  opacity: .8;
  display: block;
  float: left;
  font-size: calc(16px + 4 * ( (100vw - 600px) / 700));
  transition: opacity .3s ease-out; }

@media screen and (min-width: 1300px){
  .review-header > .inner > .homelink{
    font-size: 20px; } }

@media screen and (max-width: 600px){
  .review-header > .inner > .homelink{
    font-size: 16px; } }
  .review-header > .inner > .homelink:hover {
    opacity: 1; }

.review-quiz {
  display: table;
  padding: 0;
  width: 100%;
  height: 100%; }
  .review-quiz .upper,
  .review-quiz .lower {
    display: table-row;
    width: 100%; }
  .review-quiz .upper {
    background-image: linear-gradient(to bottom, #aa00ff, #a800f0);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFAA00FF, endColorstr=#FF9300DD, GradientType=0);
    color: whitesmoke;
    text-align: center;
    height: auto;
    height: 45vh; }
    @media (min-width: 2000px) {
      .review-quiz .upper {
        height: 40vh; } }
  .review-quiz .meaning {
    color: whitesmoke;
    text-shadow: 1px 2px 4px #7412a5;
    padding: 1em 15px;
    display: table-cell;
    font-size: calc(24px + 26 * ( (100vw - 300px) / 1700));
    vertical-align: middle;
    line-height: 1.3;
    letter-spacing: -1px; }
  @media screen and (min-width: 2000px){
  .review-quiz .meaning{
    font-size: 50px; } }
  @media screen and (max-width: 300px){
  .review-quiz .meaning{
    font-size: 24px; } }
    @media (min-width: 1024px) {
      .review-quiz .meaning {
        padding-left: 10%;
        padding-right: 10%; } }
  .review-quiz .lower .answerpanel {
    position: relative;
    padding: 0;
    margin: 0;
    border: 0;
    outline: none;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; }
  .review-quiz .lower .answer {
    display: block;
    width: 100%;
    outline: none;
    border: 0;
    margin: 0;
    padding: 0;
    background-color: #fafafa;
    box-shadow: inset 0 3px 20px -3px rgba(41, 41, 41, 0.3);
    font-size: calc(24px + 26 * ( (100vw - 300px) / 1700));
    line-height: 2.5;
    text-align: center;
    transition: all .1s ease-out; }
  @media screen and (min-width: 2000px){
  .review-quiz .lower .answer{
    font-size: 50px; } }
  @media screen and (max-width: 300px){
  .review-quiz .lower .answer{
    font-size: 24px; } }
    .review-quiz .lower .answer.-marked {
      color: whitesmoke;
      text-shadow: 0 1px 0 rgba(41, 41, 41, 0.4); }
      .review-quiz .lower .answer.-marked + .submit .icon {
        color: whitesmoke;
        text-shadow: 0 1px 0 rgba(41, 41, 41, 0.4); }
    .review-quiz .lower .answer.-invalid {
      background-color: #f5d800;
      color: #616161;
      text-shadow: none; }
      .review-quiz .lower .answer.-invalid + .submit .icon {
        color: #616161;
        text-shadow: none; }
    .review-quiz .lower .answer.-incorrect {
      background-color: #e2325b; }
    .review-quiz .lower .answer.-correct {
      background-color: #7fd468; }
  .review-quiz .lower .answer.-marked::-webkit-input-placeholder {
    color: whitesmoke; }
  .review-quiz .lower .answer.-marked::-moz-placeholder {
    color: whitesmoke; }
  .review-quiz .lower .answer.-marked:-ms-input-placeholder {
    color: whitesmoke; }
  .review-quiz .lower .answer.-marked:placeholder-shown {
    color: whitesmoke; }
  .review-quiz .lower .submitwrap,
  .review-quiz .lower .streak {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    margin: 0 .75em; }
    .review-quiz .lower .submitwrap .icon,
    .review-quiz .lower .streak .icon {
      font-size: calc(20px + 16 * ( (100vw - 300px) / 1300));
      line-height: 0;
      color: #616161; }
    @media screen and (min-width: 1600px){
  .review-quiz .lower .submitwrap .icon,
    .review-quiz .lower .streak .icon{
    font-size: 36px; } }
    @media screen and (max-width: 300px){
  .review-quiz .lower .submitwrap .icon,
    .review-quiz .lower .streak .icon{
    font-size: 20px; } }
  .review-quiz .lower .submit,
  .review-quiz .lower .streak {
    position: absolute;
    bottom: 0;
    height: 100%; }
  .review-quiz .lower .streak {
    left: 0; }
  .review-quiz .lower .submit {
    right: 0;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background: none;
    border: 0;
    border-radius: 0;
    box-shadow: none; }
    .review-quiz .lower .submit:focus .submitwrap {
      outline: 1px dashed #ababab; }

.section-heading {
  margin-bottom: .5em;
  color: #4d4d4d; }
  .section-heading > a {
    color: #4d4d4d; }
  .section-heading > .breadcrumb {
    color: #616161; }
    .section-heading > .breadcrumb:before {
      display: inline-block;
      content: ' > ';
      padding: 0 10px; }

.site-logo {
  display: inline-block;
  font-family: "Ubuntu", Helvetica, Arial, sans-serif; }
  .site-logo:hover {
    color: #4d4d4d;
    text-decoration: none; }
    .site-logo:hover > .text {
      background: #a800f0; }
  .site-logo > .text {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
    font-family: "Hiragino Kaku Gothic Pro", "Takao Pゴシック", "Meiryo", "Yu Gothic", "ヒラギノ角ゴ Pro W3", "メイリオ", "Osaka", "MS PGothic", "ＭＳ Ｐゴシック", sans-serif;
    border-radius: 100%;
    box-shadow: inset 3px 3px 8px 0 rgba(41, 41, 41, 0.25), 0 0 25px -5px rgba(41, 41, 41, 0.25);
    transition: background-color .3s ease-out;
    background: #616161;
    height: 60px;
    width: 60px; }
    @media (min-width: 590px) {
      .site-logo > .text {
        height: 75px;
        width: 75px; } }
    .site-logo > .text .kana,
    .site-logo > .text .kanji {
      display: block;
      color: whitesmoke;
      line-height: 1; }
    .site-logo > .text .kana {
      display: none;
      font-size: 13px; }
      @media (min-width: 590px) {
        .site-logo > .text .kana {
          display: block; } }
    .site-logo > .text .kanji {
      margin-top: 2px;
      font-size: 22px; }
      @media (min-width: 590px) {
        .site-logo > .text .kanji {
          font-size: 28px; } }

.user-details {
  display: flex;
  flex-direction: column;
  background: #4d4d4d;
  color: whitesmoke;
  font-family: "Ubuntu", Helvetica, Arial, sans-serif;
  border-radius: 0 0 3px 3px;
  line-height: 1.3; }
  @media (min-width: 650px) {
    .user-details {
      flex-direction: row; } }
  .user-details .title {
    margin-top: 0;
    text-shadow: 2px 2px 0 rgba(41, 41, 41, 0.5);
    color: #ababab; }
  .user-details strong {
    color: whitesmoke;
    font-family: "Ubuntu", Helvetica, Arial, sans-serif;
    font-weight: normal; }
  .user-details .wkinfo,
  .user-details .userinfo {
    flex: 0 0 100%; }
    @media (min-width: 650px) {
      .user-details .wkinfo,
      .user-details .userinfo {
        flex: 1; } }
  .user-details .wkinfo {
    padding: 25px 15px; }
    @media (min-width: 650px) {
      .user-details .wkinfo {
        text-align: right; } }
    @media (min-width: 1024px) {
      .user-details .wkinfo {
        padding: 25px; } }
    .user-details .wkinfo .item {
      color: #ababab; }
  .user-details .userinfo {
    position: relative;
    padding: 25px 15px;
    padding-top: 0; }
    @media (min-width: 650px) {
      .user-details .userinfo {
        padding-top: 25px;
        text-align: left; } }
    @media (min-width: 1024px) {
      .user-details .userinfo {
        padding: 25px;
        padding-bottom: 50px; } }
    .user-details .userinfo > .text {
      margin: 0; }
      @media (min-width: 1024px) {
        .user-details .userinfo > .text {
          max-width: 600px; } }
    .user-details .userinfo > .list:after{
  content: '';
  display: table;
  clear: both; }
      @media (min-width: 1024px) {
        .user-details .userinfo > .list {
          position: absolute;
          margin-top: 0;
          bottom: 25px;
          left: 25px; } }
      .user-details .userinfo > .list > .item {
        display: inline-block;
        margin-top: 10px;
        margin-right: 15px; }
    .user-details .userinfo > .list > .item > .link {
      color: #ababab; }
      .user-details .userinfo > .list > .item > .link:hover {
        color: whitesmoke; }
      .user-details .userinfo > .list > .item > .link .icon {
        color: whitesmoke;
        display: inline-block;
        margin-right: 5px; }

.user-overview {
  position: relative;
  padding: 25px 25px 50px;
  background: #008bd1;
  background: linear-gradient(to bottom right, #008bd1 33%, #4c81d6 77%);
  text-align: center; }
  .user-overview:after {
    border-color: transparent transparent #4d4d4d;
    border-style: none solid solid;
    border-width: 20px;
    bottom: 0;
    content: '';
    height: 0;
    left: 50%;
    margin-left: -20px;
    position: absolute;
    width: 0;
    z-index: 1; }
  .user-overview > .name {
    margin-top: 0;
    text-shadow: 2px 2px 0 rgba(41, 41, 41, 0.5);
    color: whitesmoke; }
  .user-overview > .gravatar {
    background: whitesmoke;
    border-radius: 100%;
    display: inline-block;
    height: 162px;
    margin: 0 auto;
    padding: 6px;
    position: relative;
    width: 162px; }
    .user-overview > .gravatar:before {
      box-shadow: inset 3px 3px 8px 0 rgba(0, 0, 0, 0.26);
      border-radius: 100%;
      content: '';
      display: block;
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: 1; }
    .user-overview > .gravatar img {
      border-radius: 100%;
      display: block;
      height: auto;
      width: 100%; }
  .user-overview > .reviews {
    margin-top: 25px; }
    .user-overview > .reviews .button:not(.-disabled),
    .user-overview > .reviews #forceSrs {
      transition: color .3s ease-out; }
      .user-overview > .reviews .button:not(.-disabled):hover,
      .user-overview > .reviews #forceSrs:hover {
        color: #4c81d6; }

.vocab-block, .vocab-card {
  list-style-type: none;
  background: #fafafa;
  border-radius: 3px; }
  .vocab-block > .vocab-base:after,
.vocab-card > .vocab-base:after{
  content: '';
  display: table;
  clear: both; }
  .vocab-block > .vocab-base, .vocab-card > .vocab-base {
    display: block;
    position: relative;
    color: #fafafa;
    overflow: hidden;
    z-index: 2;
    padding: 18px 15px;
    border-radius: 3px;
    background: #a800f0;
    box-shadow: 0 4px 14px -4px rgba(41, 41, 41, 0.25); }
    .vocab-block > .vocab-base .readingset:after,
.vocab-card > .vocab-base .readingset:after{
  content: '';
  display: table;
  clear: both; }
    .vocab-block > .vocab-base .readingset, .vocab-card > .vocab-base .readingset {
      line-height: 1; }
      .vocab-block > .vocab-base .readingset + .readingset, .vocab-card > .vocab-base .readingset + .readingset {
        margin-top: 15px; }
    .vocab-block > .vocab-base .kanji, .vocab-card > .vocab-base .kanji {
      text-shadow: 0 2px 2px rgba(116, 18, 165, 0.7);
      float: left;
      font-size: calc(34px + 6 * ( (100vw - 300px) / 1300));
      padding-bottom: .5em; }
    @media screen and (min-width: 1600px){
  .vocab-block > .vocab-base .kanji, .vocab-card > .vocab-base .kanji{
    font-size: 40px; } }
    @media screen and (max-width: 300px){
  .vocab-block > .vocab-base .kanji, .vocab-card > .vocab-base .kanji{
    font-size: 34px; } }
    .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana {
      overflow: hidden;
      padding-bottom: 15px;
      font-size: calc(24px + 6 * ( (100vw - 300px) / 1300)); }
    @media screen and (min-width: 1600px){
  .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana{
    font-size: 30px; } }
    @media screen and (max-width: 300px){
  .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana{
    font-size: 24px; } }
    .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana,
    .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning {
      text-shadow: 0 1px 2px rgba(116, 18, 165, 0.7);
      clear: right;
      float: right;
      font-size: calc(22px + 2 * ( (100vw - 300px) / 1300)); }
    @media screen and (min-width: 1600px){
  .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana,
    .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning{
    font-size: 24px; } }
    @media screen and (max-width: 300px){
  .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana,
    .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning{
    font-size: 22px; } }
    .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning {
      max-width: calc(100% - 150px);
      margin: auto;
      text-align: right;
      line-height: 1.3; }
      @media (max-width: 600px) {
        .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning {
          max-width: calc(100% - 75px); } }
    @media (max-width: 600px) {
      .vocab-block > .vocab-base .kanji, .vocab-card > .vocab-base .kanji,
      .vocab-block > .vocab-base .kana, .vocab-card > .vocab-base .kana,
      .vocab-block > .vocab-base .meaning, .vocab-card > .vocab-base .meaning {
        display: block;
        float: none;
        text-align: center; } }

.vocab-card > .vocab-base {
  transition: background-color .5s ease-out;
  background-color: #aa00ff; }
  .vocab-card > .vocab-base > .icon {
    position: absolute;
    bottom: 0;
    color: #fafafa;
    left: 5px;
    padding: 10px 15px;
    font-size: 20px;
    cursor: pointer; }
  .vocab-card > .vocab-base > .i-lock {
    color: #4d4d4d;
    cursor: not-allowed; }

.vocab-card > .vocab-extra {
  transition: margin-top .33s ease;
  margin-top: -56px;
  overflow: hidden; }
  @media (max-width: 600px) {
    .vocab-card > .vocab-extra {
      margin-top: -99px;
      text-align: center; } }
  .vocab-card > .vocab-extra *:not(.extraToggle) {
    transition: opacity .33s ease;
    opacity: 0; }

.vocab-card.-expanded .vocab-extra {
  margin-top: 0; }
  .vocab-card.-expanded .vocab-extra * {
    opacity: 1; }

.vocab-card.-locked > .vocab-base {
  background-size: 6px 6px;
  background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.3) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 75%, transparent 75%, transparent);
  background-color: #7412a5; }

.vocab-card.-unlockable > .vocab-base:hover {
  background-color: #7b1ea9; }
  .vocab-card.-unlockable > .vocab-base:hover .i-unlock {
    animation: wobble 1.25s infinite cubic-bezier(0.55, 0.45, 0.55, 0.45); }

.vocab-extra {
  position: relative;
  z-index: 1; }
  .vocab-extra > .icon {
    font-size: 32px;
    margin: 25px 0 25px 20px; }
    @media (max-width: 600px) {
      .vocab-extra > .icon {
        margin: 15px 0; } }
  .vocab-extra > .icon,
  .vocab-extra > .synonyms {
    display: inline-block;
    vertical-align: middle; }
    @media (max-width: 600px) {
      .vocab-extra > .icon,
      .vocab-extra > .synonyms {
        display: block; } }
  .vocab-extra > .synonyms {
    border-left: 1px solid #c0c0c0;
    font-size: 14px;
    line-height: 36px;
    margin: 25px 0 25px 25px;
    padding-left: 25px;
    max-width: calc(100% - 90px); }
    .vocab-extra > .synonyms > .text {
      vertical-align: middle; }
    @media (max-width: 600px) {
      .vocab-extra > .synonyms {
        max-width: calc(100% - 10px);
        border-left: 0;
        display: block;
        line-height: 1.5;
        margin: 15px 0;
        padding-left: 0; } }
    .vocab-extra > .synonyms > .list {
      display: inline-block;
      margin: 0;
      padding: 0; }
      @media (max-width: 600px) {
        .vocab-extra > .synonyms > .list {
          display: block; } }
    .vocab-extra > .synonyms > .list > .item {
      display: inline-block;
      vertical-align: middle; }
      .vocab-extra > .synonyms > .list > .item:after {
        content: ', '; }
      .vocab-extra > .synonyms > .list > .item:last-child:after {
        content: none; }
  .vocab-extra > .extraToggle {
    padding: 4px 7px;
    position: absolute;
    bottom: 0;
    right: 0;
    background: #fafafa; }
    .vocab-extra > .extraToggle:after {
      position: absolute;
      content: '';
      top: -8px;
      bottom: -8px;
      right: -12px;
      left: -12px; }

.vocab-list:after{
  content: '';
  display: table;
  clear: both; }

.vocab-list {
  margin-top: 0;
  margin-bottom: 0;
  padding: 0; }
  .vocab-list > .vocab-card {
    margin: 0 0 15px; }
    @media (min-width: 1024px) {
      .vocab-list > .vocab-card {
        width: calc(50% - 10px / 2);
        float: left;
        margin-bottom: 10px;
        margin-right: 10px; }
        .vocab-list > .vocab-card:nth-child(even) {
          margin-right: 0; } }
  .vocab-list.-correct .vocab-base .readingset, .vocab-list.-incorrect .vocab-base .readingset {
    display: block;
    color: whitesmoke; }
  .vocab-list.-correct .vocab-base {
    background-color: #7fd468; }
    .vocab-list.-correct .vocab-base .kanji {
      text-shadow: 0 2px 2px rgba(73, 167, 47, 0.7); }
    .vocab-list.-correct .vocab-base .kana,
    .vocab-list.-correct .vocab-base .meaning {
      text-shadow: 0 1px 2px rgba(73, 167, 47, 0.7); }
  .vocab-list.-incorrect .vocab-base {
    background-color: #e2325b; }
    .vocab-list.-incorrect .vocab-base .kanji {
      text-shadow: 1px 1px 1px rgba(196, 28, 67, 0.8); }
    .vocab-list.-incorrect .vocab-base .kana,
    .vocab-list.-incorrect .vocab-base .meaning {
      text-shadow: 0 1px 2px rgba(196, 28, 67, 0.8); }

/*# sourceMappingURL=data:application/json;base64, */
